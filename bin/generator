#!/usr/bin/env php
<?php

$path = file_exists('vendor/autoload.php') ? 'vendor/autoload.php' : '../../../autoload.php';

require_once $path;

use Del\Common\ContainerService;
use Del\Common\Config\DbCredentials;
use Del\Generator\ClearBuildsCommand;
use Del\Generator\BlankModuleCommand;
use Del\Generator\GeneratorCommand;
use Del\Generator\MvcModuleCommand;
use Del\Generator\VendorPackageCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Helper\HelperSet;
use Symfony\Component\Console\Helper\QuestionHelper;


$config = [];
if (file_exists('config/bone-db.php')) {
    $config = require_once 'config/bone-db.php';
}

if (empty($config)) {
    echo "No config found.\n";
    echo 'Please add a "db" config, in either config/bone-db.php or migrant-cfg.php';
} else {

    $containerSvc = ContainerService::getInstance();
    $credentials = new DbCredentials($config['db']);
    $helperSet = new HelperSet();
    $helperSet->set(new QuestionHelper());
    $generatorCommand = new GeneratorCommand();
    $blankCommand = new BlankModuleCommand();
    $mvcCommand = new MvcModuleCommand();
    $clearCommand = new ClearBuildsCommand();
    $packageCommand = new VendorPackageCommand();

    $app = new Application('Entity Generator');
    $app->setHelperSet($helperSet);
    $app->add($blankCommand);
    $app->add($generatorCommand);
    $app->add($mvcCommand);
    $app->add($clearCommand);
    $app->add($packageCommand);
    $app->run();
}
